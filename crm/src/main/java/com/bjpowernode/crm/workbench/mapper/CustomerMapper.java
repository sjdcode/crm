package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Customer;
import com.bjpowernode.crm.workbench.domain.CustomerRemark;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Tue Aug 09 15:46:16 CST 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 添加Customer
     */
    int insertCustomer(@Param("cus") Customer customer);

    /**
     * 根据DimName返回全部CustomerName
     */
    String[] selectCustomerNameByDimName(String dimName);

    /**
     * 根据CustomerName查询CustomerId
     */
    String selectCustomerIdByName(String name);

    /**
     * 查询客户明细微为了分页
     */
    List<Customer> selectCustomerForPageByCondition(Map<String,Object> map);

    /**
     * 根据分页条件查询后的totalRows
     */
    int selectCountForCustomerByCondition(Map<String,Object> map);

    /**
     * 查询Customer明细通过Id
     */
    Customer selectCustomerForDetailById(String id);

    /**
     * 修改Customer根据Customer
     */
    int updateCustomer(Customer customer);

    /**
     * 删除Customer
     */
    int deleteCustomerByIds(@Param("ids") String[] ids);


}