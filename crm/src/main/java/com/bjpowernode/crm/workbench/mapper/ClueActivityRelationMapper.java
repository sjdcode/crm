package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.ClueActivityRelation;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sat Aug 06 18:11:46 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 删除关联
     */
    int deleteClueActivityRelationByClueIdAndActivityId(@Param("clueId") String clueId ,@Param("activityId") String activityId);

    /**
     * 根据clueId查询未关联的市场活动
     */
    String[] selectActivityIdsByClueId(@Param("clueId") String clueId);

    /**
     * 添加ClueActivityRelation
     */
    int insertClueActivityRelationByList(@Param("clueActivityRelationList")List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据ClueId查询ClueActivityRelation
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    /**
     * 根据clueId删除全部和Activity的关联关系
     */
    int deleteAllClueRemarkRelationByClueId(String clueId);
}