package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Clue;
import com.bjpowernode.crm.workbench.domain.ClueRemark;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Wed Aug 03 22:22:43 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 通过分页和条件查询Clue
     * 多表查询新旧数据都可以进行筛选
     * ---旧数据:原表/新表.连接数据
     * ---新数据:新表.使用字段
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);

    /**
     * 通过条件查询总记录数
     */
    int selectCountOfClueByCondition(Map<String,Object> map);

    /**
     *保存创建Clue
     */
    int insertClue(Clue clue);

    /**
     * 根据id查询Clue
     */
    Clue selectClueById(String id);

    /**
     * 根据Activity修改信息
     */
    int updateClue(Clue clue);

    /**
     * 根据ids删除Clue
     */
    int deleteClueByIds(String[] ids);

    /**
     * 根据id查询Clue具体信息
     */
    Clue selectClueForDetailById(String id);

    /**
     * 根据clueId删除clue
     */
    int deleteClueById(String clueId);



}